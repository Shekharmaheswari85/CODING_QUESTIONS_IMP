Problem Name: REVERSE A STACK USING RECURSION
Problem Difficulty: None
Problem Constraints: 1 <= N <= 10^4
Problem Description:
Reverse a Stack using Recursion. Do not use any extra stack.

Input Format: First line contains an integer N (size of the stack). <br>
Next N lines follow each containing an integer to be stored in the stack where the last integer is at the top of the stack.
Sample Input: 3
3
2
1
Output Format: Output the values of the reversed stack with each value in one line each.
Sample Output: 3
2
1



=====Solution=====
#include <bits/stdc++.h>
using namespace std;

void insertAtBottom(stack<int> &s, int x)
{
    if (s.empty())
    {
        s.push(x);
        return;
    }

    int y = s.top();
    s.pop();
    insertAtBottom(s, x);
    s.push(y);
}

void reverseStack(stack<int> &s)
{
    if (s.empty())
        return;

    int x = s.top();
    s.pop();
    reverseStack(s);
    insertAtBottom(s, x);
}

int main()
{
    stack<int> s;
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        int x;
        cin >> x;
        s.push(x);
    }

    reverseStack(s);
    while (!s.empty())
    {
        cout << s.top() << endl;
        s.pop();
    }

    return 0;
}