#include<bits/stdc++.h>
// #include<ext/pb_ds/assoc_container.hpp>
// #include<ext/pb_ds/tree_policy.hpp>
#define int long long int
#define endl "\n"
#define pb push_back
int sum = 0;
#define arrinp(v) for(auto &i:v) cin>>i,sum+=i;
#define arrout(v) for(auto &i:v) cout<<i<<" ";
#define newline cout<<endl;
#define all(s) (s).begin(),(s).end()
#define dbg(a) cout<<a<<endl;
#define dbg2(a,b) cout<<a<<" "<<b<<endl;
using namespace std;
// using namespace __gnu_pbds;
// typedef tree<int,null_type,less<int>, rb_tree_tag,
//             tree_order_statistics_node_update> new_data_set;
//             // order_of_key(int)  k-th largest element
//             // find_by_order(int) gives us according to the order
//             // insert() to insert in the PBDS
//             // new_data_set ST; calling
int dp[1000][1000];
int LPS(string s, int l, int h) {
    if (l == h) return 1;
    if (s[l] == s[h] and l + 1 == h) {
        return 2;
    }
    if (s[l] == s[h]) {
        dp[l][h] =  2 + LPS(s, l + 1, h - 1);
    }
    else {
        dp[l][h] = max(LPS(s, l + 1, h), LPS(s, l, h - 1));
    }
    return dp[l][h];
}
signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    int t(1);
    // cin >> t;
    while (t--) {
        sum = 0;
        string s;
        cin >> s;
        cout << LPS(s, 0, s.size());
    }
    return 0;
}