Problem Name: Top k most frequent number in a stream
Problem Difficulty: None
Problem Constraints: 1 < t < 100
1< n < 100000
Problem Description:
Given an array of n numbers. Your task is to read numbers from the array and keep at-most K numbers at the top (according to their decreasing frequency) every time a new number is read. We basically need to print top k numbers sorted by frequency when input stream has included k distinct elements, else need to print all distinct elements sorted by frequency. If frequency of two numbers are same then print them in increasing order.

Input Format: First line contains integer t as number of test cases.
Each test case contains following input. First line contains integer n and k, n represents the length of the array and next line contains n space separated integers.

Sample Input: 1
5 2
5 1 3 5 2
Output Format: Print top k running stream.

Sample Output: 5 1 5 1 3 5 1 5 1



=====Solution=====
// C++ program to find top k elements in a stream
#include <bits/stdc++.h>
using namespace std;

// Function to print top k numbers
void kTop(int a[], int n, int k)
{
	// vector of size k+1 to store elements
	vector<int> top(k + 1);

	// array to keep track of frequency
	unordered_map<int, int> freq;

	// iterate till the end of stream
	for (int m = 0; m < n; m++)
	{
		// increase the frequency
		freq[a[m]]++;

		// store that element in top vector
		top[k] = a[m];

		// search in top vector for same element
		auto it = find(top.begin(), top.end() - 1, a[m]);

		// iterate from the position of element to zero
		for (int i = distance(top.begin(), it) - 1; i >= 0; --i)
		{
			// compare the frequency and swap if higher
			// frequency element is stored next to it
			if (freq[top[i]] < freq[top[i + 1]])
				swap(top[i], top[i + 1]);

			// if frequency is same compare the elements
			// and swap if next element is high
			else if ((freq[top[i]] == freq[top[i + 1]])
					&& (top[i] > top[i + 1]))
				swap(top[i], top[i + 1]);
			else
				break;
		}

		// print top k elements
		for (int i = 0; i < k && top[i] != 0; ++i)
			cout << top[i] << ' ';
	}
	cout << endl;
}

// Driver program to test above function
int main()
{
    int t;
    cin>>t;
    for(int i=0;i<t;i++)
    {
        int n,k;
        cin>>n>>k;
        int arr[n];
        for(int j=0;j<n;j++)
        cin>>arr[j];
        kTop(arr, n, k);
    }
	/*int k = 4;
	//int arr[] = { 5, 2, 1, 3, 2 };
	int arr[] = { 5, 1, 3, 5, 2, 1, 1, 3 };
	int n = sizeof(arr)/sizeof(arr[0]);
	kTop(arr, n, k);
	return 0;*/
}
