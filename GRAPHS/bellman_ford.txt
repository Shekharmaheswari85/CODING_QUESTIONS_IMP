vector<int> bellman_ford(int V, int src, vector<vector<int>> l) {
    vector<int> dist(V + 1, INT_MAX);
    dist[src] = 0;
    //relax all edges v-1 times
    for (int i = 0; i < V - 1; i++) {
        for (auto edge : l) {
            int x = edge[0];
            int y = edge[1];
            int w = edge[2];
            if (dist[x] != INT_MAX and dist[x] + w < dist[y]) {
                dist[y] = dist[x] + w;
            }
        }
    }
    // negative wt cycle
    for (auto edge : l) {
        int x = edge[0];
        int y = edge[1];
        int w = edge[2];
        if (dist[x] != INT_MAX and dist[x] + w < dist[y]) {
            cout<<"Negative wt cycle found"<<endl;
            exit(0);
        }
    }
}